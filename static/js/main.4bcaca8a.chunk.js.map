{"version":3,"sources":["context/GameContext.jsx","assets/logo.png","assets/logo-isa.png","pages/game/game.jsx","pages/home/home.jsx","router/Router.jsx","App.js","reportWebVitals.js","index.js"],"names":["GameContext","createContext","GameProvider","children","useState","start","setStart","finish","setFinish","props","startGame","finishGame","last","Provider","value","useStyles","makeStyles","theme","root","flexGrow","color","paper","padding","spacing","width","margin","textAlign","fontSize","backgroundColor","button","background","marginRight","cardAction","justifyContent","logo","maxWidth","marginTop","media","height","paddingTop","card","Game","useContext","classes","questions","question","setQuestion","message","setMessage","Grid","container","alignItems","justify","className","src","alt","Card","raised","CardContent","happy","Typography","variant","component","CardMedia","image","title","CardActions","Button","size","onClick","Paper","description","options","map","answer","key","messages","find","id","next","verifyNext","logoIsa","Home","direction","style","minHeight","item","Router","basename","exact","path","to","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bcaca8a.chunk.js","sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\nconst GameContext = createContext({});\r\n\r\nexport function GameProvider({ children }) {\r\n  const [start, setStart] = useState(false);\r\n  const [finish, setFinish] = useState(false);\r\n\r\n  function startGame() {\r\n    setStart(true);\r\n  }\r\n\r\n  function finishGame(last) {\r\n    setFinish(last);\r\n  }\r\n\r\n  const props = { start, startGame, finish, finishGame };\r\n\r\n  return <GameContext.Provider value={props}>{children}</GameContext.Provider>;\r\n}\r\n\r\nexport default GameContext;\r\n","export default __webpack_public_path__ + \"static/media/logo.8670c676.png\";","export default __webpack_public_path__ + \"static/media/logo-isa.6fa3e513.png\";","import {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport logo from \"..//..//assets/logo.png\";\r\nimport logoIsa from \"..//..//assets/logo-isa.png\";\r\nimport { useContext, useState } from \"react\";\r\nimport GameContext from \"../../context/GameContext\";\r\nimport questions from \"..//..//questions.json\";\r\nimport messages from \"..//..//messages.json\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    color: \"#fae6e7\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    width: \"120vh\",\r\n    margin: \"10vh\",\r\n    textAlign: \"center\",\r\n    fontSize: \"2.5vh\",\r\n    backgroundColor: \"#f191ac\",\r\n    color: \"#fae6e7\",\r\n  },\r\n  button: {\r\n    background: \"#f191ac\",\r\n    marginRight: \"2vh\",\r\n    color: \"#fae6e7\",\r\n  },\r\n  cardAction: {\r\n    justifyContent: \"center\",\r\n  },\r\n  logo: {\r\n    maxWidth: \"20vh\",\r\n    marginTop: \"5vh\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\",\r\n  },\r\n  card: {\r\n    background: \"#fae6e7\",\r\n    color: \"#f191ac\",\r\n    textAlign: \"center\",\r\n    width: \"50vh\",\r\n  },\r\n}));\r\n\r\nfunction Game() {\r\n  const { finish, finishGame } = useContext(GameContext);\r\n  const classes = useStyles();\r\n\r\n  const [question, setQuestion] = useState(questions[0]);\r\n  const [message, setMessage] = useState({});\r\n\r\n  function generateAnswers() {\r\n    const answers = question.options;\r\n    return answers.map((answer, key) => (\r\n      <Button\r\n        key={key}\r\n        variant=\"contained\"\r\n        color=\"default\"\r\n        size=\"large\"\r\n        className={classes.button}\r\n        onClick={() => verifyNext(answer)}\r\n      >\r\n        {answer.description}\r\n      </Button>\r\n    ));\r\n  }\r\n\r\n  function verifyNext(answer) {\r\n    if (answer.last) {\r\n      finishGame(true);\r\n      setMessage(messages.find((message) => message.id === answer.message));\r\n    } else {\r\n      setQuestion(questions.find((question) => question.id === answer.next));\r\n    }\r\n  }\r\n\r\n  function restartGame() {\r\n    setQuestion(questions[0]);\r\n    finishGame(false);\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      alignItems=\"center\"\r\n      justify=\"center\"\r\n      className={classes.root}\r\n    >\r\n      <img src={logo} alt=\"logo\" />\r\n      {finish ? (\r\n        <Grid container alignItems=\"center\" justify=\"center\">\r\n          <Card className={classes.card} raised>\r\n            <CardContent>\r\n              {message.happy ? (\r\n                <>\r\n                  <Typography variant=\"h4\" component=\"h2\">\r\n                    üòç üòç üòç\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" component=\"h2\">\r\n                    C√ìDIGO: #chegueiAoFinalFeliz\r\n                  </Typography>\r\n                </>\r\n              ) : (\r\n                <Typography variant=\"h4\" component=\"h2\">\r\n                  üò≠ üò≠ üò≠\r\n                </Typography>\r\n              )}\r\n            </CardContent>\r\n            <CardMedia className={classes.media} image={message.image} />\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {message.title}\r\n            </Typography>\r\n            <CardActions className={classes.cardAction}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"default\"\r\n                size=\"large\"\r\n                className={classes.button}\r\n                onClick={() => restartGame()}\r\n              >\r\n                Jogar Novamente!\r\n              </Button>\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n      ) : (\r\n        <>\r\n          <Grid container alignItems=\"center\" justify=\"center\">\r\n            <Paper className={classes.paper}>{question.description}</Paper>\r\n          </Grid>\r\n          <Grid container alignItems=\"center\" justify=\"center\">\r\n            {generateAnswers()}\r\n          </Grid>\r\n        </>\r\n      )}\r\n      <img src={logoIsa} alt=\"logoIsa\" className={classes.logo} />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","import { Button, Grid } from \"@material-ui/core\";\r\nimport { useContext } from \"react\";\r\nimport GameContext from \"../../context/GameContext\";\r\nimport logo from \"..//..//assets/logo.png\";\r\n\r\nfunction Home() {\r\n  const { startGame } = useContext(GameContext);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justify=\"center\"\r\n      style={{ minHeight: \"90vh\" }}\r\n    >\r\n      <img src={logo} alt=\"logo\" />\r\n      <Grid item>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          style={{ background: \"#f191ac\" }}\r\n          onClick={() => startGame()}\r\n        >\r\n          Iniciar Jogo\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { useContext } from \"react\";\r\nimport { HashRouter, Redirect, Route } from \"react-router-dom\";\r\nimport GameContext from \"../context/GameContext\";\r\nimport Game from \"../pages/game/game\";\r\nimport Home from \"../pages/home/home\";\r\n\r\nfunction Router() {\r\n  const { start } = useContext(GameContext);\r\n\r\n  return (\r\n    <HashRouter basename=\"/\">\r\n      <Route exact path=\"/\" component={start ? Game : Home} />\r\n      <Redirect to=\"/\" />\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","import Router from \"./router/Router\";\nimport \"./App.css\";\nimport { GameProvider } from \"./context/GameContext\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GameProvider>\n        <Router />\n      </GameProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"@fontsource/roboto\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}